// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';


function code(someCode) {
  switch (someCode) {
    case 0 : 
        return 200;
    case 1 : 
        return 201;
    case 2 : 
        return 400;
    case 3 : 
        return 401;
    case 4 : 
        return 500;
    
  }
}

function jsonStr(body) {
  return JSON.stringify(body);
}

function jsonStrBodyMsg(body) {
  return ", body: " + JSON.stringify(body);
}

function msg(param) {
  var body = param[1];
  switch (param[0]) {
    case 0 : 
        return "Ok";
    case 1 : 
        return "Created";
    case 2 : 
        return "Missing or Bad Parameters, body: " + JSON.stringify(body);
    case 3 : 
        return "User Authentication Error, body: " + JSON.stringify(body);
    case 4 : 
        return "Internal Server Error, body: " + JSON.stringify(body);
    
  }
}

var basicHeader = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Credentials": true
};

function resp(someCode, body) {
  console.log(msg(/* tuple */[
            someCode,
            body
          ]));
  return {
          statusCode: code(someCode),
          headers: basicHeader,
          body: JSON.stringify(body)
        };
}

function respOk(param) {
  return resp(/* Ok */0, param);
}

function respCreated(param) {
  return resp(/* Created */1, param);
}

function respBadRequest(param) {
  return resp(/* BadRequest */2, param);
}

function respUnAuthed(param) {
  return resp(/* Unauthorized */3, param);
}

function respServerErr(param) {
  return resp(/* InternalServerError */4, param);
}

exports.code = code;
exports.jsonStr = jsonStr;
exports.jsonStrBodyMsg = jsonStrBodyMsg;
exports.msg = msg;
exports.basicHeader = basicHeader;
exports.resp = resp;
exports.respOk = respOk;
exports.respCreated = respCreated;
exports.respBadRequest = respBadRequest;
exports.respUnAuthed = respUnAuthed;
exports.respServerErr = respServerErr;
/* No side effect */
